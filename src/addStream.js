import { redis } from './redis/redis.js'
import { generateUser } from './utils.js'

const streamKey = 'PDS:demo:users:stream';        // User streams 
const trackingKey = 'PDS:demo:users:lastId';      // last processed id
const trackingCount = 'PDS:demo:users:lastCount'; // last processed count
const cardinalityKey = 'PDS:demo:users:card';     // cardinality     
const top100Key = 'PDS:demo:users:freq'           // top 100 
const totalUsers = 100000;

async function addStream () {
  try {
    await redis.connect();

    console.log(`Erasing data...`);
    await redis.del(streamKey); 
    await redis.del(trackingKey); 
    await redis.del(trackingCount); 
    await redis.del(cardinalityKey); 
    await redis.del(top100Key); 

    console.log(`Inserting ${totalUsers} users...`);
    for (let i = 0; i < totalUsers; i += 1) {
      redis.xAdd(streamKey, '*', generateUser() );
    }
    console.log(`Done! ${await redis.xLen(streamKey)} users`);
    await redis.quit();
  } catch (error) {
    console.error('Error:', error);
    await redis.quit();
  }
};

await addStream(); 
/*
   Code template generated by copilot. 
*/